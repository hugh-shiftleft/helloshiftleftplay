# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/hslfinance

    environment:
      SBT_VERSION: 1.0.4
    
    steps:
      - checkout
      # Install SL agent
      - run: 
          name: Install Shiftleft agent
          command: curl https://www.shiftleft.io/download/sl-latest-linux-x64.tar.gz > /tmp/sl.tar.gz && sudo tar -C /usr/local/bin -xzf /tmp/sl.tar.gz
      - run:
          name: Get sbt binary
          command: |
                    sudo apt update && sudo apt install -y curl
                    curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
                    sudo dpkg -i sbt-$SBT_VERSION.deb
                    sudo rm sbt-$SBT_VERSION.deb
                    sudo apt-get update
                    sudo apt-get install -y sbt python-pip git
                    sudo pip install awscli
                    sudo apt-get clean && sudo apt-get autoclean
      # Download and cache dependencies
      - restore_cache:
          key: sbt-cache
          
      # build the apps
      - run: 
          name: Build and Assemble application
          command: cat /dev/null | sbt clean update assembly
      
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"

      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export APP_NAME=hsl-finance-app' >> $BASH_ENV
            source $BASH_ENV
      
      # Authorize to shiftleft.io
      - run: 
          name: Obtain shiftleft.io authorization
          command: sl auth --org "9cf88d23-63ae-4990-9fbf-e0ba380dc4f1" --token "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1ODcwNzAxOTUsImlhdCI6MTU1NTQ0Nzc5NSwiaXNzIjoiU2hpZnRMZWZ0Iiwib3JnSUQiOiI5Y2Y4OGQyMy02M2FlLTQ5OTAtOWZiZi1lMGJhMzgwZGM0ZjEiLCJzY29wZXMiOlsiYXBpOnYyIiwidXBsb2Fkczp3cml0ZSIsImxvZzp3cml0ZSIsInBpcGVsaW5lc3RhdHVzOnJlYWQiLCJtZXRyaWNzOndyaXRlIiwicG9saWNpZXM6Y3VzdG9tZXIiLCJwb2xpY2llczpyZWFkIl19.Sl-f56yIixgqzKakHnSEowNqAM3OIPXSCh3bEnSBRQ7NCf4lekr6aWNRlwvjoVKzC5wxdNTmaXgoA9w8z9JME7zMsJ0iv-2aEi7QawuNAQidayi4u47OngVwICwHEguEr1kItYh4p3Opa6PxN78oryAA_REx3YvPH0Jaixrt7HnZss6JcVDJs1P0YnYusUP8UDSq6wWb7B9ipdDkkK80WK15UOj8EAysuKfW7VXLfEu7V2Wq-3SWV6qNYvFg2Ldgut2u5EtKyr_0aEv4G9Dp5nki1E6fWsQ05tU7kgfSl-0VVnLIbdMdFVXIqzg4qYGitRFGY03WYgNAIhWlIZQIJQ"

      # Analyze for security!
      - run: 
          name: Analyze for security bugs
          command: sl analyze --wait --app $APP_NAME target/helloshiftleft-play-assembly-0.0.1-SNAPSHOT.jar
          
      # Starting Agent!
      - run: 
          name: Starting Application with instrumented agent
          command: sh startapp.sh

      # Test Security Results!
      - run: 
          name: Assert build quality against security standards
          command: '[[ $(curl -s "https://www.shiftleft.io/api/v2/organizations/$SHIFTLEFT_ORG_ID/projects/$APP_NAME/metrics" -H "authorization: Bearer $TOKEN" -H "content-type: application/json" --data-binary "{\"context\":{\"projectSpId\":\"sl/$SHIFTLEFT_ORG_ID/$APP_NAME\"},\"queries\":[{\"violationsAll\":{\"projectSpId\":\"sl/$SHIFTLEFT_ORG_ID/$APP_NAME\"}}]}" | jq ".responses[0].violationsAll.violations | map(select(.count > 0)) | map(.name)" | grep -o "sensitive-to-http" | wc -l) -le 20 ]]'